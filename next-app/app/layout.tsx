import type { Metadata } from 'next';
import BaseThemeProvider from '@/themes/BaseTheme';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { Suspense } from 'react';
import { tContentImg1, tLink } from '@ctypes/index';
import { tCompany, tContactFormItem, tMedia } from '@ctypes/map';
import { CommonDataProvider } from '@/contexts/Common';
import * as Image from '@/atoms/Image';
import { Box, Grid2 as Grid } from '@mui/material';
import './globals.css';

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="ja">
      <Suspense fallback={<div>Loading...</div>}>
        <body>
          <CommonDataProvider
            domain={domain}
            imgTenpo={imgTenpo}
            contactFormItems={contactFormItems}
            menus={pages}
            catchcopy={null}
            contents={contents}
            sns={snsLinks}
          >
            <BaseThemeProvider>
              <Body>{children}</Body>
            </BaseThemeProvider>
          </CommonDataProvider>
        </body>
      </Suspense>
    </html>
  );
}

const Body = ({ children }: { children: React.ReactNode }) => {
  return (
    <Grid
      container
      size={{ xs: 12 }}
      sx={{
        flexGrow: 1,
        display: 'flex',
      }}
      gap={0}
      overflow={{ xs: 'hidden', md: 'auto' }}
      height={{ xs: 'unset', md: '100vh', lg: '100vh' }}
    >
      {/* Header (PCでは 3/12, タブレットでは 4/12, スマホでは横幅100%) */}
      <Grid
        component={'header'}
        size={{ xs: 12, md: 4, lg: 3, xl: 2 }}
        sx={{
          //bgcolor: 'primary.main',
          //color: 'white',
          //p: 2,
          //minHeight: '100%',
          display: 'flex',
          position: { xs: 'sticky', md: 'sticky', lg: 'sticky' }, // スマホでは固定
          top: 0,
          zIndex: 1000,
        }}
        overflow={{ xs: 'hidden', md: 'auto' }} // はみ出たらスクロール
        height={{ xs: '60px', md: '100%', lg: '100%' }}
      >
        <Header sns={snsLinks} />
      </Grid>

      {/* Main */}
      <Grid
        size={{ xs: 12, md: 8, lg: 5, xl: 4 }}
        sx={{
          //p: 2,
          //minHeight: '100%',
          alignItems: 'flex-start',
          overflowY: { xs: 'unset', md: 'auto' }, // PCでは各列スクロール, タブレット・スマホではまとめてスクロール
        }}
        component="main"
      >
        <Box
          sx={{
            width: '100%',
            maxWidth: { xs: '680px' },
          }}
        >
          {children}
          <Footer
            companyInfo={domain}
            imgTenpo={imgTenpo}
            items={footerTableItems}
          />
        </Box>
      </Grid>
      <Grid
        size={{ xs: 0, md: 0, lg: 4, xl: 6 }}
        sx={{
          position: 'sticky',
          top: 0,
          height: '100vh',
          color: 'white',
        }}
      >
        <FreeSpace />
      </Grid>
    </Grid>
  );
};

const FreeSpace = () => {
  const imgWidth = 150;
  const imgHeight = 150;

  const positionY = [10, 150, 280, 410, 540, 670, 740, 990, 1220];
  const positionX = [10, 400, 250, 0, 200, 10, 450, 300, 600];

  const imgs = [null, null, null, null, null, null, null, null, null];

  return (
    <>
      {imgs.map((img, i) => (
        <Box
          key={i}
          style={{
            position: 'absolute',
            top: positionY[i],
            left: positionX[i],
          }}
        >
          {img && (
            <Image.Main
              src={img}
              alt="uzumaki.png"
              width={imgWidth}
              height={imgHeight}
              style={{
                position: 'absolute',
              }}
            />
          )}
          <Image.Main
            style={{
              position: 'relative',
              top: 23,
              left: 20,
              zIndex: -1,
            }}
            src="/ttnou/tmp/uzumaki.png"
            alt="uzumaki.png"
            width={imgWidth}
            height={imgHeight}
          />
        </Box>
      ))}
    </>
  );
};

// Contextで読み込む予定の仮データ
const domain: tCompany = {
  number: '1234567890',
  domain: 'example.com',
  organization_name: `海鮮居酒屋 K's食堂`,
  ceo_name: '',
  ceo_post_name: '',
  tell: '012-3456-7890',
  fax: '012-3456-7890',
  postal_code: '123-4567',
  address: '京都府京都市中央区西町1-2-3',
  address_other: '開運ビル1F',
  email: '',
  google_map: '',
  google_map_link: '',
  google_tm_script: '',
  google_tm_script_body: '',
  caption: 'Explore the amazing content on my website.',
};

const snsLinks: tLink[] = [
  {
    name: 'Facebook',
    url: 'https://line.com',
    icon: {
      url: '/ttnou/tmp/Facebook.png',
      file: 'Facebook.png',
      name: 'Facebook',
      caption: 'Facebook',
      uuid: 'jsladjlsadsfd',
    },
  },
  {
    name: 'Instagram',
    url: 'https://www.instagram.com',
    icon: {
      url: '/ttnou/tmp/instagram.svg',
      file: 'instagram.svg',
      name: 'instagram',
      caption: 'Instagram',
      uuid: 'dhsalfjdlskajfld;',
    },
  },
  {
    name: 'LINE',
    url: 'https://www.instagram.com',
    icon: {
      url: '/ttnou/tmp/line.svg',
      file: 'instlineagram.svg',
      name: 'line',
      caption: 'line',
      uuid: 'fdzgdsar;',
    },
  },
];

export const contents: tContentImg1[] = [
  {
    uuid: 'highlight1',
    title: '',
    catchcopy: 'Service',
    description:
      '担当ディレクター・デイナーが一貫してサポート。当社にいわゆる「営業マン」はいません。ディレクター・デザイナー・システムエンジニアが直接やりとりを行うため、客様のイメージや考えをしっかりと共有でき、スピーディでスムーズな進行を叶えます。',
    tags: [],
    img1: {
      url: '/tmp/tranp.gif',
      name: 'service visual',
      caption: '',
      file: 'tranp.gif',
      uuid: 'service-visual',
    },
    img2: null,
    label: '詳しく見る',
    href: '/service',
  },
  {
    uuid: 'highlight2',
    title: 'addonemにできること',
    catchcopy: 'ABILITY',
    description:
      '<li>デザイン</li><li>システム開発</li><li>マーケティング</li>',
    tags: [],
    img1: {
      url: '/tmp/all_ability.png',
      name: 'ability',
      caption: '',
      file: 'ability.jpg',
      uuid: 'ability',
    },
    img2: null,
    label: '実績はこちら',
    href: '/ability',
  },
];

export const pages: tLink[] = [
  { name: 'Home', url: '/', icon: null },
  { name: 'Service', url: '/service', icon: null },
  { name: 'Ability', url: '/ability', icon: null },
  { name: 'Contact', url: '/contact', icon: null },
];

export const contactFormItems: tContactFormItem[] = [
  {
    label: '会社・店名',
    name: 'company',
    type: 'text',
    required: true,
    placeholder: '',
  },
  {
    label: '名前',
    name: 'name',
    type: 'text',
    required: true,
    placeholder: '',
  },
  {
    label: '電話番号',
    name: 'tell',
    type: 'text',
    required: false,
    placeholder: '',
  },
  {
    label: 'メールアドレス',
    name: 'email',
    type: 'email',
    required: true,
    placeholder: 'Your Email',
  },
  {
    label: '住所',
    name: 'address',
    type: 'text',
    required: true,
    placeholder: '',
  },
  {
    label: '本文',
    name: 'message',
    type: 'textarea',
    required: true,
    placeholder: 'Your Message',
    row: 4,
  },
];

const imgTenpo: tMedia[] = [
  {
    url: '/ttnou/tmp/image_tenpo.jpg',
    file: 'image_tenpo.jpg',
    name: 'image_tenpo',
    caption: 'image_tenpo',
    uuid: 'dhakhdwljj',
  },
];

const footerTableItems = [
  { label: '予約', value: '予約可能（ネット予約/電話番号）' },
  {
    label: '営業時間',
    value: `
      <li class="list-style-none">平日：11:30~14:00、18:00〜22:00</li>
      <li class="list-style-none">土日祝：18:00~22:00</li>
      `,
  },
  { label: '定休日', value: '月曜日' },
  {
    label: '支払い',
    value: `<li class="list-style-none">現金、クレジットカード</li>
      <li class="list-style-none">電子マネー（楽天Edy、QUICPay、ApplePay）</li>
      <li class="list-style-none">QRコード決済(PayPal、メルペイ)</li>
      `,
  },
  {
    label: '座席',
    value: `
    <li class="list-style-none">カウンター　8席</li>
    <li class="list-style-none">テーブル　８席</li>
    <li class="list-style-none">個室　1個</li>`,
  },
];
